name: 08 - using variables
on:
    workflow_dispatch:
    
env: 
    WORKFLOW_VAR: I am a workflow env var
    OVERWRITTEN: I will be overwritten
    UNDEFINED_VAR_WITH_DEFAULT: ${{vars.UNDEFINED_VAR || 'default value'}}


jobs:
    echo:
        runs-on: ubuntu-latest
        env:
            JOB_VAR: 'I am a job env var'
            OVERWRITTEN: 'I have been overwritten at job level'
        steps:
            - name: Print env variables
              env:
                STEP_VAR: I am step env var
                step_var2: Another step var
              run: |
                echo "Step env var: ${{env.STEP_VAR}}"
                echo "Step env var 2: ${{env.step_var2}}"
                echo "Job env var: ${{env.JOB_VAR}}"
                echo "Workflow env var: ${{env.WORKFLOW_VAR}}"
                echo "Overwritten env var: ${{env.OVERWRITTEN}}"
            - name: Overwrite job variable
              env:
                OVERWRITTEN: I have been overwritten at the step level
              run: |
                echo "Step env var: ${{env.OVERWRITTEN}}"
    echo2:
        runs-on: ubuntu-latest
        steps:
            - name: Print variables
              run: |
                echo "Repo var: ${{vars.REPOSITORY_VAR}}"
    echo-prod:
        runs-on: ubuntu-latest
        environment: prod
        steps:
            - name: Print prod variables
              run: |
                echo "Overwritten var: ${{vars.OVERWRITTEN_VAR}}"
                echo "Repo var: ${{vars.REPOSITORY_VAR}}"
                echo "Environment var: ${{vars.TARGET_VAR}}"
    echo-undefined:
        runs-on: ubuntu-latest
        steps:
            - name: Print undefined vars
              run: |
                echo "Org var: ${{env.UNDEFINED_VAR_WITH_DEFAULT}}"